// Code generated by MockGen. DO NOT EDIT.
// Source: internal/anchor/repository/anchorer_repository.go

// Package mockanchor is a generated GoMock package.
package mockanchor

import (
	reflect "reflect"

	entity "github.com/enchainte/enchainte-sdk-go/internal/anchor/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockAnchorerRepository is a mock of AnchorerRepository interface.
type MockAnchorerRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAnchorerRepositoryMockRecorder
}

// MockAnchorerRepositoryMockRecorder is the mock recorder for MockAnchorerRepository.
type MockAnchorerRepositoryMockRecorder struct {
	mock *MockAnchorerRepository
}

// NewMockAnchorerRepository creates a new mock instance.
func NewMockAnchorerRepository(ctrl *gomock.Controller) *MockAnchorerRepository {
	mock := &MockAnchorerRepository{ctrl: ctrl}
	mock.recorder = &MockAnchorerRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnchorerRepository) EXPECT() *MockAnchorerRepositoryMockRecorder {
	return m.recorder
}

// GetAnchor mocks base method.
func (m *MockAnchorerRepository) GetAnchor(anchor int) (entity.Anchor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAnchor", anchor)
	ret0, _ := ret[0].(entity.Anchor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAnchor indicates an expected call of GetAnchor.
func (mr *MockAnchorerRepositoryMockRecorder) GetAnchor(anchor interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAnchor", reflect.TypeOf((*MockAnchorerRepository)(nil).GetAnchor), anchor)
}
