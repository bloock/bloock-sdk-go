// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/blockchain/web3.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// BlockchainClient is a mock of Client interface
type BlockchainClient struct {
	ctrl     *gomock.Controller
	recorder *BlockchainClientMockRecorder
}

// BlockchainClientMockRecorder is the mock recorder for BlockchainClient
type BlockchainClientMockRecorder struct {
	mock *BlockchainClient
}

// NewBlockchainClient creates a new mock instance
func NewBlockchainClient(ctrl *gomock.Controller) *BlockchainClient {
	mock := &BlockchainClient{ctrl: ctrl}
	mock.recorder = &BlockchainClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *BlockchainClient) EXPECT() *BlockchainClientMockRecorder {
	return m.recorder
}

// ValidateRoot mocks base method
func (m *BlockchainClient) ValidateRoot(root string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateRoot", root)
	ret0, _ := ret[0].(bool)
	return ret0
}

// ValidateRoot indicates an expected call of ValidateRoot
func (mr *BlockchainClientMockRecorder) ValidateRoot(root interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateRoot", reflect.TypeOf((*BlockchainClient)(nil).ValidateRoot), root)
}
