// Code generated by MockGen. DO NOT EDIT.
// Source: config/service/configurer_service.go

// Package mockconfig is a generated GoMock package.
package mockconfig

import (
	reflect "reflect"

	entity "github.com/enchainte/enchainte-sdk-go/config/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockConfigurerService is a mock of ConfigurerService interface.
type MockConfigurerService struct {
	ctrl     *gomock.Controller
	recorder *MockConfigurerServiceMockRecorder
}

// MockConfigurerServiceMockRecorder is the mock recorder for MockConfigurerService.
type MockConfigurerServiceMockRecorder struct {
	mock *MockConfigurerService
}

// NewMockConfigurerService creates a new mock instance.
func NewMockConfigurerService(ctrl *gomock.Controller) *MockConfigurerService {
	mock := &MockConfigurerService{ctrl: ctrl}
	mock.recorder = &MockConfigurerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigurerService) EXPECT() *MockConfigurerServiceMockRecorder {
	return m.recorder
}

// GetApiBaseUrl mocks base method.
func (m *MockConfigurerService) GetApiBaseUrl() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApiBaseUrl")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetApiBaseUrl indicates an expected call of GetApiBaseUrl.
func (mr *MockConfigurerServiceMockRecorder) GetApiBaseUrl() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApiBaseUrl", reflect.TypeOf((*MockConfigurerService)(nil).GetApiBaseUrl))
}

// GetConfiguration mocks base method.
func (m *MockConfigurerService) GetConfiguration() entity.Configuration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfiguration")
	ret0, _ := ret[0].(entity.Configuration)
	return ret0
}

// GetConfiguration indicates an expected call of GetConfiguration.
func (mr *MockConfigurerServiceMockRecorder) GetConfiguration() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfiguration", reflect.TypeOf((*MockConfigurerService)(nil).GetConfiguration))
}

// GetNetworkConfiguration mocks base method.
func (m *MockConfigurerService) GetNetworkConfiguration(network string) entity.NetworkConfiguration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkConfiguration", network)
	ret0, _ := ret[0].(entity.NetworkConfiguration)
	return ret0
}

// GetNetworkConfiguration indicates an expected call of GetNetworkConfiguration.
func (mr *MockConfigurerServiceMockRecorder) GetNetworkConfiguration(network interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkConfiguration", reflect.TypeOf((*MockConfigurerService)(nil).GetNetworkConfiguration), network)
}
