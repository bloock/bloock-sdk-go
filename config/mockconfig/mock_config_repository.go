// Code generated by MockGen. DO NOT EDIT.
// Source: config/repository/config_repository.go

// Package mockconfig is a generated GoMock package.
package mockconfig

import (
	reflect "reflect"

	entity "github.com/enchainte/enchainte-sdk-go/config/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockConfigRepository is a mock of ConfigRepository interface.
type MockConfigRepository struct {
	ctrl     *gomock.Controller
	recorder *MockConfigRepositoryMockRecorder
}

// MockConfigRepositoryMockRecorder is the mock recorder for MockConfigRepository.
type MockConfigRepositoryMockRecorder struct {
	mock *MockConfigRepository
}

// NewMockConfigRepository creates a new mock instance.
func NewMockConfigRepository(ctrl *gomock.Controller) *MockConfigRepository {
	mock := &MockConfigRepository{ctrl: ctrl}
	mock.recorder = &MockConfigRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigRepository) EXPECT() *MockConfigRepositoryMockRecorder {
	return m.recorder
}

// GetNetworkConfiguration mocks base method.
func (m *MockConfigRepository) GetNetworkConfiguration(network entity.Network) entity.NetworkConfiguration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkConfiguration", network)
	ret0, _ := ret[0].(entity.NetworkConfiguration)
	return ret0
}

// GetNetworkConfiguration indicates an expected call of GetNetworkConfiguration.
func (mr *MockConfigRepositoryMockRecorder) GetNetworkConfiguration(network interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkConfiguration", reflect.TypeOf((*MockConfigRepository)(nil).GetNetworkConfiguration), network)
}
