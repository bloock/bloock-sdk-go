// Code generated by MockGen. DO NOT EDIT.
// Source: config/repository/configurer_repository.go

// Package mockconfig is a generated GoMock package.
package mockconfig

import (
	reflect "reflect"

	entity "github.com/enchainte/enchainte-sdk-go/config/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockConfigurerRepository is a mock of ConfigurerRepository interface.
type MockConfigurerRepository struct {
	ctrl     *gomock.Controller
	recorder *MockConfigurerRepositoryMockRecorder
}

// MockConfigurerRepositoryMockRecorder is the mock recorder for MockConfigurerRepository.
type MockConfigurerRepositoryMockRecorder struct {
	mock *MockConfigurerRepository
}

// NewMockConfigurerRepository creates a new mock instance.
func NewMockConfigurerRepository(ctrl *gomock.Controller) *MockConfigurerRepository {
	mock := &MockConfigurerRepository{ctrl: ctrl}
	mock.recorder = &MockConfigurerRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigurerRepository) EXPECT() *MockConfigurerRepositoryMockRecorder {
	return m.recorder
}

// GetNetworkConfiguration mocks base method.
func (m *MockConfigurerRepository) GetNetworkConfiguration(network string) entity.NetworkConfiguration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkConfiguration", network)
	ret0, _ := ret[0].(entity.NetworkConfiguration)
	return ret0
}

// GetNetworkConfiguration indicates an expected call of GetNetworkConfiguration.
func (mr *MockConfigurerRepositoryMockRecorder) GetNetworkConfiguration(network interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkConfiguration", reflect.TypeOf((*MockConfigurerRepository)(nil).GetNetworkConfiguration), network)
}
